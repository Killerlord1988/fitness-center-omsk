{"version":3,"sources":["script.js"],"names":["mounthsTabs","document","querySelector","months","getElementsByName","subscriptionsList","querySelectorAll","removeSubscriptionsListActive","arr","cls","forEach","el","classList","remove","handleMounthsTabsClick","evt","i","length","type","checked","add","$","bind","swiper","Swiper","slidesPerView","spaceBetween","slidesPerGroup","loop","loopFillGroupWithBlank","navigation","nextEl","prevEl","breakpoints","767","1200","swiper2","checkValidate","bCheck","each","this","inputmask","submit","get","setCustomValidity","console","log","ready","currentActive","activeRowClassName","activeDayClassName","activeTimeClassName","table","timesList","removeActiveClasses","arrayOfClassNames","Array","from","classname","handleTableClick","target","parent","parentNode","currentIdx","children","findIndex","nodeName","closest","currentTime","addEventListener","activeOverlayClassName","activeClassesListClassName","activeDayListClassName","activeArrowClassName","days","colomns","overley","containerDay","addActiveClass","removeActiveClass","isSelectShown","ev","filter","c","day","hasAttribute"],"mappings":"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","file":"main.js","sourcesContent":["'use strict';\n\n//tabs radio\n\nconst mounthsTabs = document.querySelector('.subscriptions__mounth');\nconst months = document.getElementsByName('mount');\nconst subscriptionsList = document.querySelectorAll('.subscriptions__list')\n\nfunction removeSubscriptionsListActive(arr, cls) {\n    arr.forEach(el => {\n    el.classList.remove(cls)\n  });\n};\n\nconst handleMounthsTabsClick = (evt) => {\n  removeSubscriptionsListActive(subscriptionsList, 'subscriptions__list--active')\n  for (var i = 0; i < months.length; i++) {\n    if (months[i].type == \"radio\" && months[i].checked) {\n      subscriptionsList[i].classList.add('subscriptions__list--active')\n    }\n  }\n}\n\n$('.subscriptions__mounth').bind('click', handleMounthsTabsClick)\n\n\n//swiper slider initialslide\n\nconst swiper = new Swiper('.mySwiper', {\n  slidesPerView: 1,\n  spaceBetween: 30,\n  slidesPerGroup: 1,\n  loop: true,\n  loopFillGroupWithBlank: true,\n  navigation: {\n    nextEl: '.trainers__slider-control--next',\n    prevEl: '.trainers__slider-control--prev',\n  },\n\n  breakpoints: {\n    767: {\n      slidesPerView: 2,\n      spaceBetween: 30,\n      slidesPerGroup: 2,\n    },\n    1200: {\n      slidesPerView: 4,\n      spaceBetween: 30,\n      slidesPerGroup: 4,\n    },\n  }\n});\n\n\nconst swiper2 = new Swiper('.mySwiper2', {\n  spaceBetween: 30,\n  loop: true,\n  // loopFillGroupWithBlank: true,\n  navigation: {\n    nextEl: '.reviews__slider-control--next',\n    prevEl: '.reviews__slider-control--prev',\n  },\n});\n\n//masked input\n\n$('.free-lesson__form button').bind('click', checkValidate)\n\n$(document).ready(function () {\n  $('#telephone').inputmask('+7 (999) 999-99-99');\n});\n\nfunction checkValidate() {\n  let bCheck = 'validate = ok';\n  $('#telephone').each(function () {\n    if (!$(this).inputmask('isComplete')) {\n      bCheck = 'validate = no';\n      $('#telephone').get(0).setCustomValidity('Введите телефон в правильном формате');\n    } else {\n      $('.free-lesson__form').submit();\n    }\n  });\n  console.log(bCheck);\n}\n\n//timetable\n\nlet currentActive = null\n\nconst activeRowClassName = 'timetable__table-active';\nconst activeDayClassName = 'timetable__table-day--active';\nconst activeTimeClassName = 'timetable__table-time--active';\n\nconst table = document.querySelector('.timetable__table');\nconst timesList = document.querySelector('.timetable__table-time-list');\n\nconst removeActiveClasses = (arrayOfClassNames) => {\n  Array.from(arrayOfClassNames).forEach(classname => {\n    document.querySelectorAll('.' + classname).forEach(el => el.classList.remove(classname))\n  })\n};\n\nconst handleTableClick = (evt) => {\n  const target = evt.target\n  const parent = target.parentNode\n  const currentIdx = [...parent.children].findIndex(el => el === target)\n\n  if (!currentIdx || target.nodeName !== 'LI' || target.closest('.timetable__table-time-list')) return\n\n  removeActiveClasses([activeDayClassName, activeRowClassName, activeTimeClassName])\n\n  currentActive = target\n\n  target.classList.add(activeRowClassName)\n  parent.querySelector('li').classList.add(activeDayClassName)\n\n  const currentTime = timesList.children[currentIdx]\n  currentTime.classList.add(activeTimeClassName)\n};\n\ntable.addEventListener('click', handleTableClick);\n\n//timetable mobile\n\n\nconst activeOverlayClassName = 'timetable__table-time-overley--active';\nconst activeClassesListClassName = 'timetable__table-day-classes-list--active';\nconst activeDayListClassName = 'timetable__table-day--active-list';\nconst activeArrowClassName = 'timetable__table-day-arrow--active';\n\n\nconst days = document.querySelectorAll('.timetable__table-day');\nconst colomns = document.querySelectorAll('.timetable__table-day-classes-list');\nconst overley = document.querySelector('.timetable__table-time-overley');\nconst containerDay = document.querySelector('.timetable__table-day-classes');\nconsole.log(containerDay);\n\nfunction addActiveClass(el, cls) {\n  el.classList.add(cls)\n}\n\nfunction removeActiveClass(el, cls) {\n  el.classList.remove(cls)\n}\n\nlet isSelectShown = false\n\noverley.addEventListener('click', ev => {\n  removeActiveClass(overley, activeOverlayClassName)\n  removeActiveClass(containerDay, activeArrowClassName)\n\n\n  Array.from(days).forEach(el => {\n    removeActiveClass(el, activeDayListClassName)\n    removeActiveClass(containerDay, activeArrowClassName)\n  })\n\n  Array.from(colomns).filter(c => c !== currentActive.parentNode).forEach(el => {\n    removeActiveClass(el, activeClassesListClassName)\n    removeActiveClass(containerDay, activeArrowClassName)\n  })\n\n  isSelectShown = !isSelectShown\n})\n\ndays.forEach(day => {\n  day.addEventListener('click', evt => {\n    if (!isSelectShown) {\n      const target = evt.target\n\n      currentActive = target\n\n      addActiveClass(containerDay, activeArrowClassName)\n\n\n      if (target.hasAttribute('data-day')) {\n        days.forEach(el => {\n          addActiveClass(el, activeDayListClassName)\n        })\n\n        colomns.forEach(el => {\n          addActiveClass(el, activeClassesListClassName)\n        })\n\n        addActiveClass(overley, activeOverlayClassName)\n\n        isSelectShown = true\n      }\n\n    } else {\n\n      removeActiveClass(overley, activeOverlayClassName)\n      removeActiveClass(containerDay, activeArrowClassName)\n\n\n      Array.from(days).forEach(el => {\n        removeActiveClass(el, activeDayListClassName)\n        removeActiveClass(containerDay, activeArrowClassName)\n\n      })\n\n      Array.from(colomns).filter(c => c !== evt.target.parentNode).forEach(el => {\n        removeActiveClass(el, activeClassesListClassName)\n        removeActiveClass(containerDay, activeArrowClassName)\n\n      })\n\n      isSelectShown = false\n    }\n\n\n  })\n})\n"]}