{"version":3,"sources":["script.js"],"names":["swiper","Swiper","slidesPerView","spaceBetween","slidesPerGroup","loop","loopFillGroupWithBlank","navigation","nextEl","prevEl","breakpoints","767","1200","swiper2","$","mask","currentActive","activeRowClassName","activeDayClassName","activeTimeClassName","table","document","querySelector","timesList","removeActiveClasses","arrayOfClassNames","Array","from","forEach","classname","querySelectorAll","el","classList","remove","handleTableClick","evt","target","parent","parentNode","currentIdx","children","findIndex","nodeName","closest","add","currentTime","addEventListener","activeOverlayClassName","activeClassesListClassName","activeDayListClassName","days","colomns","overley","addActiveClass","cls","removeActiveClass","isSelectShown","ev","filter","c","day","hasAttribute"],"mappings":"aAIA,MAAAA,OAAA,IAAAC,OAAA,YAAA,CACAC,cAAA,EACAC,aAAA,GACAC,eAAA,EACAC,MAAA,EACAC,wBAAA,EACAC,WAAA,CACAC,OAAA,kCACAC,OAAA,mCAGAC,YAAA,CACAC,IAAA,CACAT,cAAA,EACAC,aAAA,GACAC,eAAA,GAEAQ,KAAA,CACAV,cAAA,EACAC,aAAA,GACAC,eAAA,MAMAS,QAAA,IAAAZ,OAAA,aAAA,CACAE,aAAA,GACAE,MAAA,EAEAE,WAAA,CACAC,OAAA,iCACAC,OAAA,oCAMAK,EAAA,cAAAC,KAAA,sBAIA,IAAAC,cAAA,KAEA,MAAAC,mBAAA,0BACAC,mBAAA,+BACAC,oBAAA,gCAEAC,MAAAC,SAAAC,cAAA,qBACAC,UAAAF,SAAAC,cAAA,+BAEAE,oBAAAC,IACAC,MAAAC,KAAAF,GAAAG,QAAAC,IACAR,SAAAS,iBAAA,IAAAD,GAAAD,QAAAG,GAAAA,EAAAC,UAAAC,OAAAJ,OAIAK,iBAAAC,IACA,MAAAC,EAAAD,EAAAC,OACAC,EAAAD,EAAAE,WACAC,EAAA,IAAAF,EAAAG,UAAAC,UAAAV,GAAAA,IAAAK,GAEA,GAAAG,GAAA,OAAAH,EAAAM,WAAAN,EAAAO,QAAA,+BAAA,CAEAnB,oBAAA,CAAAN,mBAAAD,mBAAAE,sBAEAH,cAAAoB,EAEAA,EAAAJ,UAAAY,IAAA3B,oBACAoB,EAAAf,cAAA,MAAAU,UAAAY,IAAA1B,oBAEA,MAAA2B,EAAAtB,UAAAiB,SAAAD,GACAM,EAAAb,UAAAY,IAAAzB,uBAGAC,MAAA0B,iBAAA,QAAAZ,kBAKA,MAAAa,uBAAA,wCACAC,2BAAA,4CACAC,uBAAA,oCAEAC,KAAA7B,SAAAS,iBAAA,yBACAqB,QAAA9B,SAAAS,iBAAA,sCACAsB,QAAA/B,SAAAC,cAAA,kCAEA,SAAA+B,eAAAtB,EAAAuB,GACAvB,EAAAC,UAAAY,IAAAU,GAGA,SAAAC,kBAAAxB,EAAAuB,GACAvB,EAAAC,UAAAC,OAAAqB,GAGA,IAAAE,eAAA,EAEAJ,QAAAN,iBAAA,QAAAW,IACAF,kBAAAH,QAAAL,wBAEArB,MAAAC,KAAAuB,MAAAtB,QAAAG,IACAwB,kBAAAxB,EAAAkB,0BAGAvB,MAAAC,KAAAwB,SAAAO,OAAAC,GAAAA,IAAA3C,cAAAsB,YAAAV,QAAAG,IACAwB,kBAAAxB,EAAAiB,8BAGAQ,eAAAA,gBAGAN,KAAAtB,QAAAgC,IACAA,EAAAd,iBAAA,QAAAX,IACA,GAAAqB,cAqBAD,kBAAAH,QAAAL,wBAEArB,MAAAC,KAAAuB,MAAAtB,QAAAG,IACAwB,kBAAAxB,EAAAkB,0BAGAvB,MAAAC,KAAAwB,SAAAO,OAAAC,GAAAA,IAAAxB,EAAAC,OAAAE,YAAAV,QAAAG,IACAwB,kBAAAxB,EAAAiB,8BAGAQ,eAAA,MA/BA,CACA,MAAApB,EAAAD,EAAAC,OAEApB,cAAAoB,EAEAA,EAAAyB,aAAA,cACAX,KAAAtB,QAAAG,IACAsB,eAAAtB,EAAAkB,0BAGAE,QAAAvB,QAAAG,IACAsB,eAAAtB,EAAAiB,8BAGAK,eAAAD,QAAAL,wBAEAS,eAAA","file":"main.js","sourcesContent":["'use strict';\n\n//swiper slider initialslide\n\nconst swiper = new Swiper('.mySwiper', {\n  slidesPerView: 1,\n  spaceBetween: 30,\n  slidesPerGroup: 1,\n  loop: true,\n  loopFillGroupWithBlank: true,\n  navigation: {\n    nextEl: '.trainers__slider-control--next',\n    prevEl: '.trainers__slider-control--prev',\n  },\n\n  breakpoints: {\n    767: {\n      slidesPerView: 2,\n      spaceBetween: 30,\n      slidesPerGroup: 2,\n    },\n    1200: {\n      slidesPerView: 4,\n      spaceBetween: 30,\n      slidesPerGroup: 4,\n    },\n  }\n});\n\n\nconst swiper2 = new Swiper('.mySwiper2', {\n  spaceBetween: 30,\n  loop: true,\n  // loopFillGroupWithBlank: true,\n  navigation: {\n    nextEl: '.reviews__slider-control--next',\n    prevEl: '.reviews__slider-control--prev',\n  },\n});\n\n//masked input\n\n$('#telephone').mask('+7 (999) 999-99-99');\n\n//timetable\n\nlet currentActive = null\n\nconst activeRowClassName = 'timetable__table-active';\nconst activeDayClassName = 'timetable__table-day--active';\nconst activeTimeClassName = 'timetable__table-time--active';\n\nconst table = document.querySelector('.timetable__table');\nconst timesList = document.querySelector('.timetable__table-time-list');\n\nconst removeActiveClasses = (arrayOfClassNames) => {\n  Array.from(arrayOfClassNames).forEach(classname => {\n    document.querySelectorAll('.' + classname).forEach(el => el.classList.remove(classname))\n  })\n};\n\nconst handleTableClick = (evt) => {\n  const target = evt.target\n  const parent = target.parentNode\n  const currentIdx = [...parent.children].findIndex(el => el === target)\n\n  if (!currentIdx || target.nodeName !== 'LI' || target.closest('.timetable__table-time-list')) return\n\n  removeActiveClasses([activeDayClassName, activeRowClassName, activeTimeClassName])\n\n  currentActive = target\n\n  target.classList.add(activeRowClassName)\n  parent.querySelector('li').classList.add(activeDayClassName)\n\n  const currentTime = timesList.children[currentIdx]\n  currentTime.classList.add(activeTimeClassName)\n};\n\ntable.addEventListener('click', handleTableClick);\n\n//timetable mobile\n\n\nconst activeOverlayClassName = 'timetable__table-time-overley--active';\nconst activeClassesListClassName = 'timetable__table-day-classes-list--active';\nconst activeDayListClassName = 'timetable__table-day--active-list';\n\nconst days = document.querySelectorAll('.timetable__table-day')\nconst colomns = document.querySelectorAll('.timetable__table-day-classes-list')\nconst overley = document.querySelector('.timetable__table-time-overley')\n\nfunction addActiveClass(el, cls) {\n  el.classList.add(cls)\n}\n\nfunction removeActiveClass(el, cls) {\n  el.classList.remove(cls)\n}\n\nlet isSelectShown = false\n\noverley.addEventListener('click', ev => {\n  removeActiveClass(overley, activeOverlayClassName)\n\n  Array.from(days).forEach(el => {\n    removeActiveClass(el, activeDayListClassName)\n  })\n\n  Array.from(colomns).filter(c => c !== currentActive.parentNode).forEach( el => {\n    removeActiveClass(el, activeClassesListClassName)\n  })\n\n  isSelectShown = !isSelectShown\n})\n\ndays.forEach(day => {\n  day.addEventListener('click', evt => {\n    if (!isSelectShown) {\n      const target = evt.target\n\n      currentActive = target\n\n      if (target.hasAttribute('data-day')) {\n        days.forEach(el => {\n          addActiveClass(el, activeDayListClassName)\n        })\n\n        colomns.forEach(el => {\n          addActiveClass(el, activeClassesListClassName)\n        })\n\n        addActiveClass(overley, activeOverlayClassName)\n\n        isSelectShown = true\n      }\n\n    } else {\n\n      removeActiveClass(overley, activeOverlayClassName)\n\n      Array.from(days).forEach(el => {\n        removeActiveClass(el, activeDayListClassName)\n      })\n\n      Array.from(colomns).filter(c => c !== evt.target.parentNode).forEach( el => {\n        removeActiveClass(el, activeClassesListClassName)\n      })\n\n      isSelectShown = false\n    }\n\n\n  })\n})\n"]}