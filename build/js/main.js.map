{"version":3,"sources":["script.js"],"names":["swiper","Swiper","slidesPerView","spaceBetween","slidesPerGroup","loop","loopFillGroupWithBlank","navigation","nextEl","prevEl","breakpoints","767","1200","swiper2","checkValidate","bCheck","$","each","this","inputmask","submit","get","setCustomValidity","console","log","bind","document","ready","currentActive","activeRowClassName","activeDayClassName","activeTimeClassName","table","querySelector","timesList","removeActiveClasses","arrayOfClassNames","Array","from","forEach","classname","querySelectorAll","el","classList","remove","handleTableClick","evt","target","parent","parentNode","currentIdx","children","findIndex","nodeName","closest","add","currentTime","addEventListener","activeOverlayClassName","activeClassesListClassName","activeDayListClassName","activeArrowClassName","days","colomns","overley","containerDay","addActiveClass","cls","removeActiveClass","isSelectShown","ev","filter","c","day","hasAttribute"],"mappings":"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","file":"main.js","sourcesContent":["'use strict';\n\n//swiper slider initialslide\n\nconst swiper = new Swiper('.mySwiper', {\n  slidesPerView: 1,\n  spaceBetween: 30,\n  slidesPerGroup: 1,\n  loop: true,\n  loopFillGroupWithBlank: true,\n  navigation: {\n    nextEl: '.trainers__slider-control--next',\n    prevEl: '.trainers__slider-control--prev',\n  },\n\n  breakpoints: {\n    767: {\n      slidesPerView: 2,\n      spaceBetween: 30,\n      slidesPerGroup: 2,\n    },\n    1200: {\n      slidesPerView: 4,\n      spaceBetween: 30,\n      slidesPerGroup: 4,\n    },\n  }\n});\n\n\nconst swiper2 = new Swiper('.mySwiper2', {\n  spaceBetween: 30,\n  loop: true,\n  // loopFillGroupWithBlank: true,\n  navigation: {\n    nextEl: '.reviews__slider-control--next',\n    prevEl: '.reviews__slider-control--prev',\n  },\n});\n\n//masked input\n\n// const form = document.querySelector('.free-lesson__form')\n// const submitForm = form.querySelector('.free-lesson__form button');\n// console.log(submitForm);\n\n$('.free-lesson__form button').bind('click', checkValidate)\n\n$(document).ready(function() {\n  $('#telephone').inputmask('+7 (999) 999-99-99');\n});\n\nfunction checkValidate() {\n  let bCheck = 'validate = ok';\n  $('#telephone').each(function() {\n    if (!$(this).inputmask('isComplete')) {\n      bCheck = 'validate = no';\n      $('#telephone').get(0).setCustomValidity('Введите телефон в правильном формате');\n    } else {\n      $('.free-lesson__form').submit();\n    }\n  });\n  console.log(bCheck);\n}\n\n//timetable\n\nlet currentActive = null\n\nconst activeRowClassName = 'timetable__table-active';\nconst activeDayClassName = 'timetable__table-day--active';\nconst activeTimeClassName = 'timetable__table-time--active';\n\nconst table = document.querySelector('.timetable__table');\nconst timesList = document.querySelector('.timetable__table-time-list');\n\nconst removeActiveClasses = (arrayOfClassNames) => {\n  Array.from(arrayOfClassNames).forEach(classname => {\n    document.querySelectorAll('.' + classname).forEach(el => el.classList.remove(classname))\n  })\n};\n\nconst handleTableClick = (evt) => {\n  const target = evt.target\n  const parent = target.parentNode\n  const currentIdx = [...parent.children].findIndex(el => el === target)\n\n  if (!currentIdx || target.nodeName !== 'LI' || target.closest('.timetable__table-time-list')) return\n\n  removeActiveClasses([activeDayClassName, activeRowClassName, activeTimeClassName])\n\n  currentActive = target\n\n  target.classList.add(activeRowClassName)\n  parent.querySelector('li').classList.add(activeDayClassName)\n\n  const currentTime = timesList.children[currentIdx]\n  currentTime.classList.add(activeTimeClassName)\n};\n\ntable.addEventListener('click', handleTableClick);\n\n//timetable mobile\n\n\nconst activeOverlayClassName = 'timetable__table-time-overley--active';\nconst activeClassesListClassName = 'timetable__table-day-classes-list--active';\nconst activeDayListClassName = 'timetable__table-day--active-list';\nconst activeArrowClassName = 'timetable__table-day-arrow--active';\n\n\nconst days = document.querySelectorAll('.timetable__table-day');\nconst colomns = document.querySelectorAll('.timetable__table-day-classes-list');\nconst overley = document.querySelector('.timetable__table-time-overley');\nconst containerDay = document.querySelector('.timetable__table-day-classes');\nconsole.log(containerDay);\n\nfunction addActiveClass(el, cls) {\n  el.classList.add(cls)\n}\n\nfunction removeActiveClass(el, cls) {\n  el.classList.remove(cls)\n}\n\nlet isSelectShown = false\n\noverley.addEventListener('click', ev => {\n  removeActiveClass(overley, activeOverlayClassName)\n  removeActiveClass(containerDay, activeArrowClassName)\n\n\n  Array.from(days).forEach(el => {\n    removeActiveClass(el, activeDayListClassName)\n    removeActiveClass(containerDay, activeArrowClassName)\n  })\n\n  Array.from(colomns).filter(c => c !== currentActive.parentNode).forEach(el => {\n    removeActiveClass(el, activeClassesListClassName)\n    removeActiveClass(containerDay, activeArrowClassName)\n  })\n\n  isSelectShown = !isSelectShown\n})\n\ndays.forEach(day => {\n  day.addEventListener('click', evt => {\n    if (!isSelectShown) {\n      const target = evt.target\n\n      currentActive = target\n\n      addActiveClass(containerDay, activeArrowClassName)\n\n\n      if (target.hasAttribute('data-day')) {\n        days.forEach(el => {\n          addActiveClass(el, activeDayListClassName)\n        })\n\n        colomns.forEach(el => {\n          addActiveClass(el, activeClassesListClassName)\n        })\n\n        addActiveClass(overley, activeOverlayClassName)\n\n        isSelectShown = true\n      }\n\n    } else {\n\n      removeActiveClass(overley, activeOverlayClassName)\n      removeActiveClass(containerDay, activeArrowClassName)\n\n\n      Array.from(days).forEach(el => {\n        removeActiveClass(el, activeDayListClassName)\n        removeActiveClass(containerDay, activeArrowClassName)\n\n      })\n\n      Array.from(colomns).filter(c => c !== evt.target.parentNode).forEach(el => {\n        removeActiveClass(el, activeClassesListClassName)\n        removeActiveClass(containerDay, activeArrowClassName)\n\n      })\n\n      isSelectShown = false\n    }\n\n\n  })\n})\n"]}